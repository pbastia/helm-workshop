# kind: DeploymentConfig
# apiVersion: apps.openshift.io/v1
# metadata:
#   name: "{{ template "single-postgres.name" . }}-postgresql"
#   labels:
# {{ include "single-postgres.labels" . | indent 4 }}
#     app: {{ template "single-postgres.name" . }}
#   annotations: {}
# spec:
#   strategy:
#     type: Recreate
#     recreateParams:
#       timeoutSeconds: 600
#     resources: {}
#     activeDeadlineSeconds: 21600
#   triggers:
#     - type: ConfigChange
#     - type: ImageChange
#       imageChangeParams:
#         automatic: true
#         containerNames:
#           - "{{ template "single-postgres.name" . }}-postgresql"
#         from:
#           kind: ImageStreamTag
#           namespace: openshift
#           name: postgresql:9.6
#   replicas: 1
#   revisionHistoryLimit: 10
#   test: false
#   selector:
#     app: "{{ template "single-postgres.name" . }}"
#     deploymentconfig: "{{ template "single-postgres.name" . }}-postgresql"
#   template:
#     metadata:
#       creationTimestamp:
#       labels:
# {{ include "single-postgres.labels" . | indent 8 }}
#         app: "{{ template "single-postgres.name" . }}"
#         deploymentconfig: "{{ template "single-postgres.name" . }}-postgresql"
#       annotations: {}
#     spec:
#       volumes:
#         - name: postgresql-volume
#           persistentVolumeClaim:
#             claimName: "{{ template "single-postgres.name" . }}-postgresql"
#       containers:
#         - name: "{{ template "single-postgres.name" . }}-postgresql"
#           image: image-registry.openshift-image-registry.svc:5000/openshift/postgresql:9
#           ports:
#             - containerPort: 5432
#               protocol: TCP
#           env:
#             - name: POSTGRESQL_DATABASE
#               valueFrom:
#                 secretKeyRef:
#                   name: "{{ template "single-postgres.name" . }}-postgresql"
#                   key: database-name
#             - name: POSTGRESQL_PASSWORD
#               valueFrom:
#                 secretKeyRef:
#                   name: "{{ template "single-postgres.name" . }}-postgresql"
#                   key: database-password
#             - name: POSTGRESQL_USER
#               valueFrom:
#                 secretKeyRef:
#                   name: "{{ template "single-postgres.name" . }}-postgresql"
#                   key: database-user
#           resources: {}
#           volumeMounts:
#             - name: postgresql-volume
#               mountPath: "/var/lib/pgsql/data"
#           livenessProbe:
#             initialDelaySeconds: 30
#             tcpSocket:
#               port: 5432
#             timeoutSeconds: 1
#           readinessProbe:
#             exec:
#               command:
#                 - /bin/bash
#                 - -c
#                 - pg_isready -h localhost -p 5432
#             initialDelaySeconds: 20
#             timeoutSeconds: 15
#           terminationMessagePath: "/dev/termination-log"
#           terminationMessagePolicy: File
#           imagePullPolicy: Always
#       restartPolicy: Always
#       terminationGracePeriodSeconds: 30
#       dnsPolicy: ClusterFirst
#       securityContext: {}
#       schedulerName: default-scheduler
