kind: Deployment
apiVersion: apps/v1
metadata:
  name: "{{ template "single-postgres.name" . }}"
  labels:
    component: database
{{ include "single-postgres.labels" . | indent 4 }}
    app: {{ template "single-postgres.name" . }}
  annotations: {}
spec:
  replicas: {{ .Values.replicaCount }}
  selector: 
    name: {{ template "single-postgres.name" . }}
  selector:
    matchLabels:
      component: database
  strategy:
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp:
      labels:
{{ include "single-postgres.labels" . | indent 8 }}
        component: database
    spec:
      volumes:
        - name: postgresql-volume
          persistentVolumeClaim:
            claimName: {{ template "single-postgres.name" . }}-postgresql
      containers:
        - name: "{{ template "single-postgres.name" . }}-postgresql"
          image: postgres:14
          ports:
            - containerPort: 5432
              protocol: TCP
          env:
            - name: POSTGRES_DATABASE
              valueFrom:
                secretKeyRef:
                  name: "{{ template "single-postgres.name" . }}-postgresql"
                  key: database-name
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "{{ template "single-postgres.name" . }}-postgresql"
                  key: database-password
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: "{{ template "single-postgres.name" . }}-postgresql"
                  key: database-user
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
          resources: {}
          volumeMounts:
            - name: postgresql-volume
              mountPath: "/var/lib/postgresql/data"
          livenessProbe:
            initialDelaySeconds: 30
            tcpSocket:
              port: 5432
            timeoutSeconds: 1
          readinessProbe:
            exec:
              command:
                - /bin/bash
                - -c
                - pg_isready -h localhost -p 5432
            initialDelaySeconds: 20
            timeoutSeconds: 15
          terminationMessagePath: "/dev/termination-log"
          terminationMessagePolicy: File
          imagePullPolicy: Always
